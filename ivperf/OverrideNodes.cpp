// This file is automatically generated by OverrideClassGenerator.
// It overrides all Inventor classes derived from SoNode by its own nodes.


#include <Inventor/lists/SoTypeList.h>
#include "OverrideNodes.h"


static SoTypeList overridenClasses(100);


#include <Inventor/nodes/SoPerspectiveCamera.h>
OVERRIDE(SoPerspectiveCamera);
#include <Inventor/nodes/SoOrthographicCamera.h>
OVERRIDE(SoOrthographicCamera);
#include <Inventor/nodes/SoAsciiText.h>
OVERRIDE(SoAsciiText);
#include <Inventor/nodes/SoCone.h>
OVERRIDE(SoCone);
#include <Inventor/nodes/SoCube.h>
OVERRIDE(SoCube);
#include <Inventor/nodes/SoCylinder.h>
OVERRIDE(SoCylinder);
#include <Inventor/nodes/SoFaceSet.h>
OVERRIDE(SoFaceSet);
#include <Inventor/nodes/SoLineSet.h>
OVERRIDE(SoLineSet);
#include <Inventor/nodes/SoPointSet.h>
OVERRIDE(SoPointSet);
#include <Inventor/nodes/SoMarkerSet.h>
OVERRIDE(SoMarkerSet);
#include <Inventor/nodes/SoQuadMesh.h>
OVERRIDE(SoQuadMesh);
#include <Inventor/nodes/SoTriangleStripSet.h>
OVERRIDE(SoTriangleStripSet);
#include <Inventor/nodes/SoIndexedFaceSet.h>
OVERRIDE(SoIndexedFaceSet);
#include <Inventor/nodes/SoIndexedLineSet.h>
OVERRIDE(SoIndexedLineSet);
#include <Inventor/nodes/SoIndexedTriangleStripSet.h>
OVERRIDE(SoIndexedTriangleStripSet);
#include <Inventor/nodes/SoImage.h>
OVERRIDE(SoImage);
#include <Inventor/nodes/SoIndexedNurbsCurve.h>
OVERRIDE(SoIndexedNurbsCurve);
#include <Inventor/nodes/SoIndexedNurbsSurface.h>
OVERRIDE(SoIndexedNurbsSurface);
#include <Inventor/nodes/SoNurbsCurve.h>
OVERRIDE(SoNurbsCurve);
#include <Inventor/nodes/SoNurbsSurface.h>
OVERRIDE(SoNurbsSurface);
#include <Inventor/nodes/SoSphere.h>
OVERRIDE(SoSphere);
#include <Inventor/nodes/SoText2.h>
OVERRIDE(SoText2);
#include <Inventor/nodes/SoText3.h>
OVERRIDE(SoText3);
#include <Inventor/nodes/SoGroup.h>
OVERRIDE(SoGroup);
#include <Inventor/nodes/SoSeparator.h>
OVERRIDE(SoSeparator);
#include <Inventor/nodes/SoAnnotation.h>
OVERRIDE(SoAnnotation);
#include <Inventor/nodes/SoLocateHighlight.h>
OVERRIDE(SoLocateHighlight);
#include <Inventor/nodes/SoWWWAnchor.h>
OVERRIDE(SoWWWAnchor);
#include <Inventor/nodes/SoArray.h>
OVERRIDE(SoArray);
#include <Inventor/nodes/SoSwitch.h>
OVERRIDE(SoSwitch);
#include <Inventor/nodes/SoBlinker.h>
OVERRIDE(SoBlinker);
#include <Inventor/nodes/SoLOD.h>
OVERRIDE(SoLOD);
#include <Inventor/nodes/SoLevelOfDetail.h>
OVERRIDE(SoLevelOfDetail);
#include <Inventor/nodes/SoMultipleCopy.h>
OVERRIDE(SoMultipleCopy);
#include <Inventor/nodes/SoPathSwitch.h>
OVERRIDE(SoPathSwitch);
#include <Inventor/nodes/SoTransformSeparator.h>
OVERRIDE(SoTransformSeparator);
#include <Inventor/nodes/SoMatrixTransform.h>
OVERRIDE(SoMatrixTransform);
#include <Inventor/nodes/SoRotation.h>
OVERRIDE(SoRotation);
#include <Inventor/nodes/SoPendulum.h>
OVERRIDE(SoPendulum);
#include <Inventor/nodes/SoRotor.h>
OVERRIDE(SoRotor);
#include <Inventor/nodes/SoResetTransform.h>
OVERRIDE(SoResetTransform);
#include <Inventor/nodes/SoRotationXYZ.h>
OVERRIDE(SoRotationXYZ);
#include <Inventor/nodes/SoScale.h>
OVERRIDE(SoScale);
#include <Inventor/nodes/SoTranslation.h>
OVERRIDE(SoTranslation);
#include <Inventor/nodes/SoShuttle.h>
OVERRIDE(SoShuttle);
#include <Inventor/nodes/SoTransform.h>
OVERRIDE(SoTransform);
#include <Inventor/nodes/SoUnits.h>
OVERRIDE(SoUnits);
#include <Inventor/nodes/SoBaseColor.h>
OVERRIDE(SoBaseColor);
#include <Inventor/nodes/SoCallback.h>
OVERRIDE(SoCallback);
#include <Inventor/nodes/SoClipPlane.h>
OVERRIDE(SoClipPlane);
#include <Inventor/nodes/SoColorIndex.h>
OVERRIDE(SoColorIndex);
#include <Inventor/nodes/SoComplexity.h>
OVERRIDE(SoComplexity);
#include <Inventor/nodes/SoCoordinate3.h>
OVERRIDE(SoCoordinate3);
#include <Inventor/nodes/SoCoordinate4.h>
OVERRIDE(SoCoordinate4);
#include <Inventor/nodes/SoDirectionalLight.h>
OVERRIDE(SoDirectionalLight);
#include <Inventor/nodes/SoSpotLight.h>
OVERRIDE(SoSpotLight);
#include <Inventor/nodes/SoPointLight.h>
OVERRIDE(SoPointLight);
#include <Inventor/nodes/SoDrawStyle.h>
OVERRIDE(SoDrawStyle);
#include <Inventor/nodes/SoEnvironment.h>
OVERRIDE(SoEnvironment);
#include <Inventor/nodes/SoEventCallback.h>
OVERRIDE(SoEventCallback);
#include <Inventor/nodes/SoFile.h>
OVERRIDE(SoFile);
#include <Inventor/nodes/SoFont.h>
OVERRIDE(SoFont);
#include <Inventor/nodes/SoFontStyle.h>
OVERRIDE(SoFontStyle);
#include <Inventor/nodes/SoInfo.h>
OVERRIDE(SoInfo);
#include <Inventor/nodes/SoLabel.h>
OVERRIDE(SoLabel);
#include <Inventor/nodes/SoLightModel.h>
OVERRIDE(SoLightModel);
#include <Inventor/nodes/SoLinearProfile.h>
OVERRIDE(SoLinearProfile);
#include <Inventor/nodes/SoNurbsProfile.h>
OVERRIDE(SoNurbsProfile);
#include <Inventor/nodes/SoMaterial.h>
OVERRIDE(SoMaterial);
#include <Inventor/nodes/SoMaterialBinding.h>
OVERRIDE(SoMaterialBinding);
#include <Inventor/nodes/SoNormal.h>
OVERRIDE(SoNormal);
#include <Inventor/nodes/SoNormalBinding.h>
OVERRIDE(SoNormalBinding);
#include <Inventor/nodes/SoPackedColor.h>
OVERRIDE(SoPackedColor);
#include <Inventor/nodes/SoPickStyle.h>
OVERRIDE(SoPickStyle);
#include <Inventor/nodes/SoPolygonOffset.h>
OVERRIDE(SoPolygonOffset);
#include <Inventor/nodes/SoProfileCoordinate2.h>
OVERRIDE(SoProfileCoordinate2);
#include <Inventor/nodes/SoProfileCoordinate3.h>
OVERRIDE(SoProfileCoordinate3);
#include <Inventor/nodes/SoShapeHints.h>
OVERRIDE(SoShapeHints);
#include <Inventor/nodes/SoTexture2.h>
OVERRIDE(SoTexture2);
#include <Inventor/nodes/SoTexture3.h>
OVERRIDE(SoTexture3);
#include <Inventor/nodes/SoTexture2Transform.h>
OVERRIDE(SoTexture2Transform);
#include <Inventor/nodes/SoTexture3Transform.h>
OVERRIDE(SoTexture3Transform);
#include <Inventor/nodes/SoTextureCoordinate2.h>
OVERRIDE(SoTextureCoordinate2);
#include <Inventor/nodes/SoTextureCoordinate3.h>
OVERRIDE(SoTextureCoordinate3);
#include <Inventor/nodes/SoTextureCoordinateBinding.h>
OVERRIDE(SoTextureCoordinateBinding);
#include <Inventor/nodes/SoTextureCoordinateDefault.h>
OVERRIDE(SoTextureCoordinateDefault);
#include <Inventor/nodes/SoTextureCoordinateEnvironment.h>
OVERRIDE(SoTextureCoordinateEnvironment);
#include <Inventor/nodes/SoTextureCoordinatePlane.h>
OVERRIDE(SoTextureCoordinatePlane);
#include <Inventor/nodes/SoVertexProperty.h>
OVERRIDE(SoVertexProperty);
#include <Inventor/nodes/SoWWWInline.h>
OVERRIDE(SoWWWInline);
#include <Inventor/nodes/SoListener.h>
OVERRIDE(SoListener);
#include <Inventor/nodes/SoTransparencyType.h>
OVERRIDE(SoTransparencyType);
#include <Inventor/nodes/SoTextureScalePolicy.h>
OVERRIDE(SoTextureScalePolicy);
#include <Inventor/nodes/SoTextureUnit.h>
OVERRIDE(SoTextureUnit);
#include <Inventor/nodes/SoBumpMap.h>
OVERRIDE(SoBumpMap);
#include <Inventor/nodes/SoBumpMapCoordinate.h>
OVERRIDE(SoBumpMapCoordinate);
#include <Inventor/nodes/SoBumpMapTransform.h>
OVERRIDE(SoBumpMapTransform);
#include <Inventor/nodes/SoSceneTexture2.h>
OVERRIDE(SoSceneTexture2);
#include <Inventor/nodes/SoTextureCoordinateCube.h>
OVERRIDE(SoTextureCoordinateCube);
#include <Inventor/nodes/SoTextureCoordinateSphere.h>
OVERRIDE(SoTextureCoordinateSphere);
#include <Inventor/nodes/SoTextureCoordinateCylinder.h>
OVERRIDE(SoTextureCoordinateCylinder);
#include <Inventor/nodes/SoTextureCombine.h>
OVERRIDE(SoTextureCombine);
#include <Inventor/VRMLnodes/SoVRMLGroup.h>
OVERRIDE(SoVRMLGroup);
#include <Inventor/VRMLnodes/SoVRMLAnchor.h>
OVERRIDE(SoVRMLAnchor);
#include <Inventor/VRMLnodes/SoVRMLAppearance.h>
OVERRIDE(SoVRMLAppearance);
#include <Inventor/VRMLnodes/SoVRMLAudioClip.h>
OVERRIDE(SoVRMLAudioClip);
#include <Inventor/VRMLnodes/SoVRMLBackground.h>
OVERRIDE(SoVRMLBackground);
#include <Inventor/VRMLnodes/SoVRMLBillboard.h>
OVERRIDE(SoVRMLBillboard);
#include <Inventor/VRMLnodes/SoVRMLBox.h>
OVERRIDE(SoVRMLBox);
#include <Inventor/VRMLnodes/SoVRMLCollision.h>
OVERRIDE(SoVRMLCollision);
#include <Inventor/VRMLnodes/SoVRMLColor.h>
OVERRIDE(SoVRMLColor);
#include <Inventor/VRMLnodes/SoVRMLColorInterpolator.h>
OVERRIDE(SoVRMLColorInterpolator);
#include <Inventor/VRMLnodes/SoVRMLCone.h>
OVERRIDE(SoVRMLCone);
#include <Inventor/VRMLnodes/SoVRMLCoordinate.h>
OVERRIDE(SoVRMLCoordinate);
#include <Inventor/VRMLnodes/SoVRMLCoordinateInterpolator.h>
OVERRIDE(SoVRMLCoordinateInterpolator);
#include <Inventor/VRMLnodes/SoVRMLCylinder.h>
OVERRIDE(SoVRMLCylinder);
#include <Inventor/VRMLnodes/SoVRMLCylinderSensor.h>
OVERRIDE(SoVRMLCylinderSensor);
#include <Inventor/VRMLnodes/SoVRMLDirectionalLight.h>
OVERRIDE(SoVRMLDirectionalLight);
#include <Inventor/VRMLnodes/SoVRMLElevationGrid.h>
OVERRIDE(SoVRMLElevationGrid);
#include <Inventor/VRMLnodes/SoVRMLExtrusion.h>
OVERRIDE(SoVRMLExtrusion);
#include <Inventor/VRMLnodes/SoVRMLFog.h>
OVERRIDE(SoVRMLFog);
#include <Inventor/VRMLnodes/SoVRMLFontStyle.h>
OVERRIDE(SoVRMLFontStyle);
#include <Inventor/VRMLnodes/SoVRMLImageTexture.h>
OVERRIDE(SoVRMLImageTexture);
#include <Inventor/VRMLnodes/SoVRMLIndexedFaceSet.h>
OVERRIDE(SoVRMLIndexedFaceSet);
#include <Inventor/VRMLnodes/SoVRMLIndexedLineSet.h>
OVERRIDE(SoVRMLIndexedLineSet);
#include <Inventor/VRMLnodes/SoVRMLLOD.h>
OVERRIDE(SoVRMLLOD);
#include <Inventor/VRMLnodes/SoVRMLShape.h>
OVERRIDE(SoVRMLShape);
#include <Inventor/VRMLnodes/SoVRMLMaterial.h>
OVERRIDE(SoVRMLMaterial);
#include <Inventor/VRMLnodes/SoVRMLMovieTexture.h>
OVERRIDE(SoVRMLMovieTexture);
#include <Inventor/VRMLnodes/SoVRMLNavigationInfo.h>
OVERRIDE(SoVRMLNavigationInfo);
#include <Inventor/VRMLnodes/SoVRMLNormal.h>
OVERRIDE(SoVRMLNormal);
#include <Inventor/VRMLnodes/SoVRMLNormalInterpolator.h>
OVERRIDE(SoVRMLNormalInterpolator);
#include <Inventor/VRMLnodes/SoVRMLOrientationInterpolator.h>
OVERRIDE(SoVRMLOrientationInterpolator);
#include <Inventor/VRMLnodes/SoVRMLPixelTexture.h>
OVERRIDE(SoVRMLPixelTexture);
#include <Inventor/VRMLnodes/SoVRMLPlaneSensor.h>
OVERRIDE(SoVRMLPlaneSensor);
#include <Inventor/VRMLnodes/SoVRMLPointLight.h>
OVERRIDE(SoVRMLPointLight);
#include <Inventor/VRMLnodes/SoVRMLPointSet.h>
OVERRIDE(SoVRMLPointSet);
#include <Inventor/VRMLnodes/SoVRMLPositionInterpolator.h>
OVERRIDE(SoVRMLPositionInterpolator);
#include <Inventor/VRMLnodes/SoVRMLProximitySensor.h>
OVERRIDE(SoVRMLProximitySensor);
#include <Inventor/VRMLnodes/SoVRMLScalarInterpolator.h>
OVERRIDE(SoVRMLScalarInterpolator);
#include <Inventor/VRMLnodes/SoVRMLScript.h>
OVERRIDE(SoVRMLScript);
#include <Inventor/VRMLnodes/SoVRMLSound.h>
OVERRIDE(SoVRMLSound);
#include <Inventor/VRMLnodes/SoVRMLSphere.h>
OVERRIDE(SoVRMLSphere);
#include <Inventor/VRMLnodes/SoVRMLSphereSensor.h>
OVERRIDE(SoVRMLSphereSensor);
#include <Inventor/VRMLnodes/SoVRMLSpotLight.h>
OVERRIDE(SoVRMLSpotLight);
#include <Inventor/VRMLnodes/SoVRMLSwitch.h>
OVERRIDE(SoVRMLSwitch);
#include <Inventor/VRMLnodes/SoVRMLText.h>
OVERRIDE(SoVRMLText);
#include <Inventor/VRMLnodes/SoVRMLTextureCoordinate.h>
OVERRIDE(SoVRMLTextureCoordinate);
#include <Inventor/VRMLnodes/SoVRMLTextureTransform.h>
OVERRIDE(SoVRMLTextureTransform);
#include <Inventor/VRMLnodes/SoVRMLTimeSensor.h>
OVERRIDE(SoVRMLTimeSensor);
#include <Inventor/VRMLnodes/SoVRMLTouchSensor.h>
OVERRIDE(SoVRMLTouchSensor);
#include <Inventor/VRMLnodes/SoVRMLTransform.h>
OVERRIDE(SoVRMLTransform);
#include <Inventor/VRMLnodes/SoVRMLViewpoint.h>
OVERRIDE(SoVRMLViewpoint);
#include <Inventor/VRMLnodes/SoVRMLVisibilitySensor.h>
OVERRIDE(SoVRMLVisibilitySensor);
#include <Inventor/VRMLnodes/SoVRMLWorldInfo.h>
OVERRIDE(SoVRMLWorldInfo);
#include <Inventor/nodekits/SoNodeKitListPart.h>
OVERRIDE(SoNodeKitListPart);
#include <Inventor/nodekits/SoBaseKit.h>
OVERRIDE(SoBaseKit);
#include <Inventor/nodekits/SoAppearanceKit.h>
OVERRIDE(SoAppearanceKit);
#include <Inventor/nodekits/SoCameraKit.h>
OVERRIDE(SoCameraKit);
#include <Inventor/nodekits/SoLightKit.h>
OVERRIDE(SoLightKit);
#include <Inventor/nodekits/SoSceneKit.h>
OVERRIDE(SoSceneKit);
#include <Inventor/nodekits/SoSeparatorKit.h>
OVERRIDE(SoSeparatorKit);
#include <Inventor/nodekits/SoShapeKit.h>
OVERRIDE(SoShapeKit);
#include <Inventor/nodekits/SoWrapperKit.h>
OVERRIDE(SoWrapperKit);
#include <Inventor/nodes/SoAntiSquish.h>
OVERRIDE(SoAntiSquish);
#include <Inventor/nodes/SoSelection.h>
OVERRIDE(SoSelection);
#include <Inventor/nodes/SoExtSelection.h>
OVERRIDE(SoExtSelection);
#include <Inventor/nodes/SoSurroundScale.h>
OVERRIDE(SoSurroundScale);
#include <Inventor/nodekits/SoInteractionKit.h>
OVERRIDE(SoInteractionKit);
#include <Inventor/draggers/SoDragger.h>
OVERRIDE(SoDragger);
#include <Inventor/draggers/SoCenterballDragger.h>
OVERRIDE(SoCenterballDragger);
#include <Inventor/draggers/SoDirectionalLightDragger.h>
OVERRIDE(SoDirectionalLightDragger);
#include <Inventor/draggers/SoDragPointDragger.h>
OVERRIDE(SoDragPointDragger);
#include <Inventor/draggers/SoHandleBoxDragger.h>
OVERRIDE(SoHandleBoxDragger);
#include <Inventor/draggers/SoJackDragger.h>
OVERRIDE(SoJackDragger);
#include <Inventor/draggers/SoPointLightDragger.h>
OVERRIDE(SoPointLightDragger);
#include <Inventor/draggers/SoRotateCylindricalDragger.h>
OVERRIDE(SoRotateCylindricalDragger);
#include <Inventor/draggers/SoRotateDiscDragger.h>
OVERRIDE(SoRotateDiscDragger);
#include <Inventor/draggers/SoRotateSphericalDragger.h>
OVERRIDE(SoRotateSphericalDragger);
#include <Inventor/draggers/SoScale1Dragger.h>
OVERRIDE(SoScale1Dragger);
#include <Inventor/draggers/SoScale2Dragger.h>
OVERRIDE(SoScale2Dragger);
#include <Inventor/draggers/SoScale2UniformDragger.h>
OVERRIDE(SoScale2UniformDragger);
#include <Inventor/draggers/SoScaleUniformDragger.h>
OVERRIDE(SoScaleUniformDragger);
#include <Inventor/draggers/SoSpotLightDragger.h>
OVERRIDE(SoSpotLightDragger);
#include <Inventor/draggers/SoTabBoxDragger.h>
OVERRIDE(SoTabBoxDragger);
#include <Inventor/draggers/SoTabPlaneDragger.h>
OVERRIDE(SoTabPlaneDragger);
#include <Inventor/draggers/SoTrackballDragger.h>
OVERRIDE(SoTrackballDragger);
#include <Inventor/draggers/SoTransformBoxDragger.h>
OVERRIDE(SoTransformBoxDragger);
#include <Inventor/draggers/SoTransformerDragger.h>
OVERRIDE(SoTransformerDragger);
#include <Inventor/draggers/SoTranslate1Dragger.h>
OVERRIDE(SoTranslate1Dragger);
#include <Inventor/draggers/SoTranslate2Dragger.h>
OVERRIDE(SoTranslate2Dragger);
#include <Inventor/manips/SoClipPlaneManip.h>
OVERRIDE(SoClipPlaneManip);
#include <Inventor/manips/SoDirectionalLightManip.h>
OVERRIDE(SoDirectionalLightManip);
#include <Inventor/manips/SoPointLightManip.h>
OVERRIDE(SoPointLightManip);
#include <Inventor/manips/SoSpotLightManip.h>
OVERRIDE(SoSpotLightManip);
#include <Inventor/manips/SoTransformManip.h>
OVERRIDE(SoTransformManip);
#include <Inventor/manips/SoCenterballManip.h>
OVERRIDE(SoCenterballManip);
#include <Inventor/manips/SoHandleBoxManip.h>
OVERRIDE(SoHandleBoxManip);
#include <Inventor/manips/SoJackManip.h>
OVERRIDE(SoJackManip);
#include <Inventor/manips/SoTabBoxManip.h>
OVERRIDE(SoTabBoxManip);
#include <Inventor/manips/SoTrackballManip.h>
OVERRIDE(SoTrackballManip);
#include <Inventor/manips/SoTransformBoxManip.h>
OVERRIDE(SoTransformBoxManip);
#include <Inventor/manips/SoTransformerManip.h>
OVERRIDE(SoTransformerManip);


void overrideClasses()
{
  SoType::overrideType(SoPerspectiveCamera::getClassTypeId(), SoPerspectiveCameraOverride::createInstance);
  overridenClasses.append(SoPerspectiveCamera::getClassTypeId());
  SoType::overrideType(SoOrthographicCamera::getClassTypeId(), SoOrthographicCameraOverride::createInstance);
  overridenClasses.append(SoOrthographicCamera::getClassTypeId());
  SoType::overrideType(SoAsciiText::getClassTypeId(), SoAsciiTextOverride::createInstance);
  overridenClasses.append(SoAsciiText::getClassTypeId());
  SoType::overrideType(SoCone::getClassTypeId(), SoConeOverride::createInstance);
  overridenClasses.append(SoCone::getClassTypeId());
  SoType::overrideType(SoCube::getClassTypeId(), SoCubeOverride::createInstance);
  overridenClasses.append(SoCube::getClassTypeId());
  SoType::overrideType(SoCylinder::getClassTypeId(), SoCylinderOverride::createInstance);
  overridenClasses.append(SoCylinder::getClassTypeId());
  SoType::overrideType(SoFaceSet::getClassTypeId(), SoFaceSetOverride::createInstance);
  overridenClasses.append(SoFaceSet::getClassTypeId());
  SoType::overrideType(SoLineSet::getClassTypeId(), SoLineSetOverride::createInstance);
  overridenClasses.append(SoLineSet::getClassTypeId());
  SoType::overrideType(SoPointSet::getClassTypeId(), SoPointSetOverride::createInstance);
  overridenClasses.append(SoPointSet::getClassTypeId());
  SoType::overrideType(SoMarkerSet::getClassTypeId(), SoMarkerSetOverride::createInstance);
  overridenClasses.append(SoMarkerSet::getClassTypeId());
  SoType::overrideType(SoQuadMesh::getClassTypeId(), SoQuadMeshOverride::createInstance);
  overridenClasses.append(SoQuadMesh::getClassTypeId());
  SoType::overrideType(SoTriangleStripSet::getClassTypeId(), SoTriangleStripSetOverride::createInstance);
  overridenClasses.append(SoTriangleStripSet::getClassTypeId());
  SoType::overrideType(SoIndexedFaceSet::getClassTypeId(), SoIndexedFaceSetOverride::createInstance);
  overridenClasses.append(SoIndexedFaceSet::getClassTypeId());
  SoType::overrideType(SoIndexedLineSet::getClassTypeId(), SoIndexedLineSetOverride::createInstance);
  overridenClasses.append(SoIndexedLineSet::getClassTypeId());
  SoType::overrideType(SoIndexedTriangleStripSet::getClassTypeId(), SoIndexedTriangleStripSetOverride::createInstance);
  overridenClasses.append(SoIndexedTriangleStripSet::getClassTypeId());
  SoType::overrideType(SoImage::getClassTypeId(), SoImageOverride::createInstance);
  overridenClasses.append(SoImage::getClassTypeId());
  SoType::overrideType(SoIndexedNurbsCurve::getClassTypeId(), SoIndexedNurbsCurveOverride::createInstance);
  overridenClasses.append(SoIndexedNurbsCurve::getClassTypeId());
  SoType::overrideType(SoIndexedNurbsSurface::getClassTypeId(), SoIndexedNurbsSurfaceOverride::createInstance);
  overridenClasses.append(SoIndexedNurbsSurface::getClassTypeId());
  SoType::overrideType(SoNurbsCurve::getClassTypeId(), SoNurbsCurveOverride::createInstance);
  overridenClasses.append(SoNurbsCurve::getClassTypeId());
  SoType::overrideType(SoNurbsSurface::getClassTypeId(), SoNurbsSurfaceOverride::createInstance);
  overridenClasses.append(SoNurbsSurface::getClassTypeId());
  SoType::overrideType(SoSphere::getClassTypeId(), SoSphereOverride::createInstance);
  overridenClasses.append(SoSphere::getClassTypeId());
  SoType::overrideType(SoText2::getClassTypeId(), SoText2Override::createInstance);
  overridenClasses.append(SoText2::getClassTypeId());
  SoType::overrideType(SoText3::getClassTypeId(), SoText3Override::createInstance);
  overridenClasses.append(SoText3::getClassTypeId());
  SoType::overrideType(SoGroup::getClassTypeId(), SoGroupOverride::createInstance);
  overridenClasses.append(SoGroup::getClassTypeId());
  SoType::overrideType(SoSeparator::getClassTypeId(), SoSeparatorOverride::createInstance);
  overridenClasses.append(SoSeparator::getClassTypeId());
  SoType::overrideType(SoAnnotation::getClassTypeId(), SoAnnotationOverride::createInstance);
  overridenClasses.append(SoAnnotation::getClassTypeId());
  SoType::overrideType(SoLocateHighlight::getClassTypeId(), SoLocateHighlightOverride::createInstance);
  overridenClasses.append(SoLocateHighlight::getClassTypeId());
  SoType::overrideType(SoWWWAnchor::getClassTypeId(), SoWWWAnchorOverride::createInstance);
  overridenClasses.append(SoWWWAnchor::getClassTypeId());
  SoType::overrideType(SoArray::getClassTypeId(), SoArrayOverride::createInstance);
  overridenClasses.append(SoArray::getClassTypeId());
  SoType::overrideType(SoSwitch::getClassTypeId(), SoSwitchOverride::createInstance);
  overridenClasses.append(SoSwitch::getClassTypeId());
  SoType::overrideType(SoBlinker::getClassTypeId(), SoBlinkerOverride::createInstance);
  overridenClasses.append(SoBlinker::getClassTypeId());
  SoType::overrideType(SoLOD::getClassTypeId(), SoLODOverride::createInstance);
  overridenClasses.append(SoLOD::getClassTypeId());
  SoType::overrideType(SoLevelOfDetail::getClassTypeId(), SoLevelOfDetailOverride::createInstance);
  overridenClasses.append(SoLevelOfDetail::getClassTypeId());
  SoType::overrideType(SoMultipleCopy::getClassTypeId(), SoMultipleCopyOverride::createInstance);
  overridenClasses.append(SoMultipleCopy::getClassTypeId());
  SoType::overrideType(SoPathSwitch::getClassTypeId(), SoPathSwitchOverride::createInstance);
  overridenClasses.append(SoPathSwitch::getClassTypeId());
  SoType::overrideType(SoTransformSeparator::getClassTypeId(), SoTransformSeparatorOverride::createInstance);
  overridenClasses.append(SoTransformSeparator::getClassTypeId());
  SoType::overrideType(SoMatrixTransform::getClassTypeId(), SoMatrixTransformOverride::createInstance);
  overridenClasses.append(SoMatrixTransform::getClassTypeId());
  SoType::overrideType(SoRotation::getClassTypeId(), SoRotationOverride::createInstance);
  overridenClasses.append(SoRotation::getClassTypeId());
  SoType::overrideType(SoPendulum::getClassTypeId(), SoPendulumOverride::createInstance);
  overridenClasses.append(SoPendulum::getClassTypeId());
  SoType::overrideType(SoRotor::getClassTypeId(), SoRotorOverride::createInstance);
  overridenClasses.append(SoRotor::getClassTypeId());
  SoType::overrideType(SoResetTransform::getClassTypeId(), SoResetTransformOverride::createInstance);
  overridenClasses.append(SoResetTransform::getClassTypeId());
  SoType::overrideType(SoRotationXYZ::getClassTypeId(), SoRotationXYZOverride::createInstance);
  overridenClasses.append(SoRotationXYZ::getClassTypeId());
  SoType::overrideType(SoScale::getClassTypeId(), SoScaleOverride::createInstance);
  overridenClasses.append(SoScale::getClassTypeId());
  SoType::overrideType(SoTranslation::getClassTypeId(), SoTranslationOverride::createInstance);
  overridenClasses.append(SoTranslation::getClassTypeId());
  SoType::overrideType(SoShuttle::getClassTypeId(), SoShuttleOverride::createInstance);
  overridenClasses.append(SoShuttle::getClassTypeId());
  SoType::overrideType(SoTransform::getClassTypeId(), SoTransformOverride::createInstance);
  overridenClasses.append(SoTransform::getClassTypeId());
  SoType::overrideType(SoUnits::getClassTypeId(), SoUnitsOverride::createInstance);
  overridenClasses.append(SoUnits::getClassTypeId());
  SoType::overrideType(SoBaseColor::getClassTypeId(), SoBaseColorOverride::createInstance);
  overridenClasses.append(SoBaseColor::getClassTypeId());
  SoType::overrideType(SoCallback::getClassTypeId(), SoCallbackOverride::createInstance);
  overridenClasses.append(SoCallback::getClassTypeId());
  SoType::overrideType(SoClipPlane::getClassTypeId(), SoClipPlaneOverride::createInstance);
  overridenClasses.append(SoClipPlane::getClassTypeId());
  SoType::overrideType(SoColorIndex::getClassTypeId(), SoColorIndexOverride::createInstance);
  overridenClasses.append(SoColorIndex::getClassTypeId());
  SoType::overrideType(SoComplexity::getClassTypeId(), SoComplexityOverride::createInstance);
  overridenClasses.append(SoComplexity::getClassTypeId());
  SoType::overrideType(SoCoordinate3::getClassTypeId(), SoCoordinate3Override::createInstance);
  overridenClasses.append(SoCoordinate3::getClassTypeId());
  SoType::overrideType(SoCoordinate4::getClassTypeId(), SoCoordinate4Override::createInstance);
  overridenClasses.append(SoCoordinate4::getClassTypeId());
  SoType::overrideType(SoDirectionalLight::getClassTypeId(), SoDirectionalLightOverride::createInstance);
  overridenClasses.append(SoDirectionalLight::getClassTypeId());
  SoType::overrideType(SoSpotLight::getClassTypeId(), SoSpotLightOverride::createInstance);
  overridenClasses.append(SoSpotLight::getClassTypeId());
  SoType::overrideType(SoPointLight::getClassTypeId(), SoPointLightOverride::createInstance);
  overridenClasses.append(SoPointLight::getClassTypeId());
  SoType::overrideType(SoDrawStyle::getClassTypeId(), SoDrawStyleOverride::createInstance);
  overridenClasses.append(SoDrawStyle::getClassTypeId());
  SoType::overrideType(SoEnvironment::getClassTypeId(), SoEnvironmentOverride::createInstance);
  overridenClasses.append(SoEnvironment::getClassTypeId());
  SoType::overrideType(SoEventCallback::getClassTypeId(), SoEventCallbackOverride::createInstance);
  overridenClasses.append(SoEventCallback::getClassTypeId());
  SoType::overrideType(SoFile::getClassTypeId(), SoFileOverride::createInstance);
  overridenClasses.append(SoFile::getClassTypeId());
  SoType::overrideType(SoFont::getClassTypeId(), SoFontOverride::createInstance);
  overridenClasses.append(SoFont::getClassTypeId());
  SoType::overrideType(SoFontStyle::getClassTypeId(), SoFontStyleOverride::createInstance);
  overridenClasses.append(SoFontStyle::getClassTypeId());
  SoType::overrideType(SoInfo::getClassTypeId(), SoInfoOverride::createInstance);
  overridenClasses.append(SoInfo::getClassTypeId());
  SoType::overrideType(SoLabel::getClassTypeId(), SoLabelOverride::createInstance);
  overridenClasses.append(SoLabel::getClassTypeId());
  SoType::overrideType(SoLightModel::getClassTypeId(), SoLightModelOverride::createInstance);
  overridenClasses.append(SoLightModel::getClassTypeId());
  SoType::overrideType(SoLinearProfile::getClassTypeId(), SoLinearProfileOverride::createInstance);
  overridenClasses.append(SoLinearProfile::getClassTypeId());
  SoType::overrideType(SoNurbsProfile::getClassTypeId(), SoNurbsProfileOverride::createInstance);
  overridenClasses.append(SoNurbsProfile::getClassTypeId());
  SoType::overrideType(SoMaterial::getClassTypeId(), SoMaterialOverride::createInstance);
  overridenClasses.append(SoMaterial::getClassTypeId());
  SoType::overrideType(SoMaterialBinding::getClassTypeId(), SoMaterialBindingOverride::createInstance);
  overridenClasses.append(SoMaterialBinding::getClassTypeId());
  SoType::overrideType(SoNormal::getClassTypeId(), SoNormalOverride::createInstance);
  overridenClasses.append(SoNormal::getClassTypeId());
  SoType::overrideType(SoNormalBinding::getClassTypeId(), SoNormalBindingOverride::createInstance);
  overridenClasses.append(SoNormalBinding::getClassTypeId());
  SoType::overrideType(SoPackedColor::getClassTypeId(), SoPackedColorOverride::createInstance);
  overridenClasses.append(SoPackedColor::getClassTypeId());
  SoType::overrideType(SoPickStyle::getClassTypeId(), SoPickStyleOverride::createInstance);
  overridenClasses.append(SoPickStyle::getClassTypeId());
  SoType::overrideType(SoPolygonOffset::getClassTypeId(), SoPolygonOffsetOverride::createInstance);
  overridenClasses.append(SoPolygonOffset::getClassTypeId());
  SoType::overrideType(SoProfileCoordinate2::getClassTypeId(), SoProfileCoordinate2Override::createInstance);
  overridenClasses.append(SoProfileCoordinate2::getClassTypeId());
  SoType::overrideType(SoProfileCoordinate3::getClassTypeId(), SoProfileCoordinate3Override::createInstance);
  overridenClasses.append(SoProfileCoordinate3::getClassTypeId());
  SoType::overrideType(SoShapeHints::getClassTypeId(), SoShapeHintsOverride::createInstance);
  overridenClasses.append(SoShapeHints::getClassTypeId());
  SoType::overrideType(SoTexture2::getClassTypeId(), SoTexture2Override::createInstance);
  overridenClasses.append(SoTexture2::getClassTypeId());
  SoType::overrideType(SoTexture3::getClassTypeId(), SoTexture3Override::createInstance);
  overridenClasses.append(SoTexture3::getClassTypeId());
  SoType::overrideType(SoTexture2Transform::getClassTypeId(), SoTexture2TransformOverride::createInstance);
  overridenClasses.append(SoTexture2Transform::getClassTypeId());
  SoType::overrideType(SoTexture3Transform::getClassTypeId(), SoTexture3TransformOverride::createInstance);
  overridenClasses.append(SoTexture3Transform::getClassTypeId());
  SoType::overrideType(SoTextureCoordinate2::getClassTypeId(), SoTextureCoordinate2Override::createInstance);
  overridenClasses.append(SoTextureCoordinate2::getClassTypeId());
  SoType::overrideType(SoTextureCoordinate3::getClassTypeId(), SoTextureCoordinate3Override::createInstance);
  overridenClasses.append(SoTextureCoordinate3::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateBinding::getClassTypeId(), SoTextureCoordinateBindingOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateBinding::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateDefault::getClassTypeId(), SoTextureCoordinateDefaultOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateDefault::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateEnvironment::getClassTypeId(), SoTextureCoordinateEnvironmentOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateEnvironment::getClassTypeId());
  SoType::overrideType(SoTextureCoordinatePlane::getClassTypeId(), SoTextureCoordinatePlaneOverride::createInstance);
  overridenClasses.append(SoTextureCoordinatePlane::getClassTypeId());
  SoType::overrideType(SoVertexProperty::getClassTypeId(), SoVertexPropertyOverride::createInstance);
  overridenClasses.append(SoVertexProperty::getClassTypeId());
  SoType::overrideType(SoWWWInline::getClassTypeId(), SoWWWInlineOverride::createInstance);
  overridenClasses.append(SoWWWInline::getClassTypeId());
  SoType::overrideType(SoListener::getClassTypeId(), SoListenerOverride::createInstance);
  overridenClasses.append(SoListener::getClassTypeId());
  SoType::overrideType(SoTransparencyType::getClassTypeId(), SoTransparencyTypeOverride::createInstance);
  overridenClasses.append(SoTransparencyType::getClassTypeId());
  SoType::overrideType(SoTextureScalePolicy::getClassTypeId(), SoTextureScalePolicyOverride::createInstance);
  overridenClasses.append(SoTextureScalePolicy::getClassTypeId());
  SoType::overrideType(SoTextureUnit::getClassTypeId(), SoTextureUnitOverride::createInstance);
  overridenClasses.append(SoTextureUnit::getClassTypeId());
  SoType::overrideType(SoBumpMap::getClassTypeId(), SoBumpMapOverride::createInstance);
  overridenClasses.append(SoBumpMap::getClassTypeId());
  SoType::overrideType(SoBumpMapCoordinate::getClassTypeId(), SoBumpMapCoordinateOverride::createInstance);
  overridenClasses.append(SoBumpMapCoordinate::getClassTypeId());
  SoType::overrideType(SoBumpMapTransform::getClassTypeId(), SoBumpMapTransformOverride::createInstance);
  overridenClasses.append(SoBumpMapTransform::getClassTypeId());
  SoType::overrideType(SoSceneTexture2::getClassTypeId(), SoSceneTexture2Override::createInstance);
  overridenClasses.append(SoSceneTexture2::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateCube::getClassTypeId(), SoTextureCoordinateCubeOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateCube::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateSphere::getClassTypeId(), SoTextureCoordinateSphereOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateSphere::getClassTypeId());
  SoType::overrideType(SoTextureCoordinateCylinder::getClassTypeId(), SoTextureCoordinateCylinderOverride::createInstance);
  overridenClasses.append(SoTextureCoordinateCylinder::getClassTypeId());
  SoType::overrideType(SoTextureCombine::getClassTypeId(), SoTextureCombineOverride::createInstance);
  overridenClasses.append(SoTextureCombine::getClassTypeId());
  SoType::overrideType(SoVRMLGroup::getClassTypeId(), SoVRMLGroupOverride::createInstance);
  overridenClasses.append(SoVRMLGroup::getClassTypeId());
  SoType::overrideType(SoVRMLAnchor::getClassTypeId(), SoVRMLAnchorOverride::createInstance);
  overridenClasses.append(SoVRMLAnchor::getClassTypeId());
  SoType::overrideType(SoVRMLAppearance::getClassTypeId(), SoVRMLAppearanceOverride::createInstance);
  overridenClasses.append(SoVRMLAppearance::getClassTypeId());
  SoType::overrideType(SoVRMLAudioClip::getClassTypeId(), SoVRMLAudioClipOverride::createInstance);
  overridenClasses.append(SoVRMLAudioClip::getClassTypeId());
  SoType::overrideType(SoVRMLBackground::getClassTypeId(), SoVRMLBackgroundOverride::createInstance);
  overridenClasses.append(SoVRMLBackground::getClassTypeId());
  SoType::overrideType(SoVRMLBillboard::getClassTypeId(), SoVRMLBillboardOverride::createInstance);
  overridenClasses.append(SoVRMLBillboard::getClassTypeId());
  SoType::overrideType(SoVRMLBox::getClassTypeId(), SoVRMLBoxOverride::createInstance);
  overridenClasses.append(SoVRMLBox::getClassTypeId());
  SoType::overrideType(SoVRMLCollision::getClassTypeId(), SoVRMLCollisionOverride::createInstance);
  overridenClasses.append(SoVRMLCollision::getClassTypeId());
  SoType::overrideType(SoVRMLColor::getClassTypeId(), SoVRMLColorOverride::createInstance);
  overridenClasses.append(SoVRMLColor::getClassTypeId());
  SoType::overrideType(SoVRMLColorInterpolator::getClassTypeId(), SoVRMLColorInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLColorInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLCone::getClassTypeId(), SoVRMLConeOverride::createInstance);
  overridenClasses.append(SoVRMLCone::getClassTypeId());
  SoType::overrideType(SoVRMLCoordinate::getClassTypeId(), SoVRMLCoordinateOverride::createInstance);
  overridenClasses.append(SoVRMLCoordinate::getClassTypeId());
  SoType::overrideType(SoVRMLCoordinateInterpolator::getClassTypeId(), SoVRMLCoordinateInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLCoordinateInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLCylinder::getClassTypeId(), SoVRMLCylinderOverride::createInstance);
  overridenClasses.append(SoVRMLCylinder::getClassTypeId());
  SoType::overrideType(SoVRMLCylinderSensor::getClassTypeId(), SoVRMLCylinderSensorOverride::createInstance);
  overridenClasses.append(SoVRMLCylinderSensor::getClassTypeId());
  SoType::overrideType(SoVRMLDirectionalLight::getClassTypeId(), SoVRMLDirectionalLightOverride::createInstance);
  overridenClasses.append(SoVRMLDirectionalLight::getClassTypeId());
  SoType::overrideType(SoVRMLElevationGrid::getClassTypeId(), SoVRMLElevationGridOverride::createInstance);
  overridenClasses.append(SoVRMLElevationGrid::getClassTypeId());
  SoType::overrideType(SoVRMLExtrusion::getClassTypeId(), SoVRMLExtrusionOverride::createInstance);
  overridenClasses.append(SoVRMLExtrusion::getClassTypeId());
  SoType::overrideType(SoVRMLFog::getClassTypeId(), SoVRMLFogOverride::createInstance);
  overridenClasses.append(SoVRMLFog::getClassTypeId());
  SoType::overrideType(SoVRMLFontStyle::getClassTypeId(), SoVRMLFontStyleOverride::createInstance);
  overridenClasses.append(SoVRMLFontStyle::getClassTypeId());
  SoType::overrideType(SoVRMLImageTexture::getClassTypeId(), SoVRMLImageTextureOverride::createInstance);
  overridenClasses.append(SoVRMLImageTexture::getClassTypeId());
  SoType::overrideType(SoVRMLIndexedFaceSet::getClassTypeId(), SoVRMLIndexedFaceSetOverride::createInstance);
  overridenClasses.append(SoVRMLIndexedFaceSet::getClassTypeId());
  SoType::overrideType(SoVRMLIndexedLineSet::getClassTypeId(), SoVRMLIndexedLineSetOverride::createInstance);
  overridenClasses.append(SoVRMLIndexedLineSet::getClassTypeId());
  SoType::overrideType(SoVRMLLOD::getClassTypeId(), SoVRMLLODOverride::createInstance);
  overridenClasses.append(SoVRMLLOD::getClassTypeId());
  SoType::overrideType(SoVRMLShape::getClassTypeId(), SoVRMLShapeOverride::createInstance);
  overridenClasses.append(SoVRMLShape::getClassTypeId());
  SoType::overrideType(SoVRMLMaterial::getClassTypeId(), SoVRMLMaterialOverride::createInstance);
  overridenClasses.append(SoVRMLMaterial::getClassTypeId());
  SoType::overrideType(SoVRMLMovieTexture::getClassTypeId(), SoVRMLMovieTextureOverride::createInstance);
  overridenClasses.append(SoVRMLMovieTexture::getClassTypeId());
  SoType::overrideType(SoVRMLNavigationInfo::getClassTypeId(), SoVRMLNavigationInfoOverride::createInstance);
  overridenClasses.append(SoVRMLNavigationInfo::getClassTypeId());
  SoType::overrideType(SoVRMLNormal::getClassTypeId(), SoVRMLNormalOverride::createInstance);
  overridenClasses.append(SoVRMLNormal::getClassTypeId());
  SoType::overrideType(SoVRMLNormalInterpolator::getClassTypeId(), SoVRMLNormalInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLNormalInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLOrientationInterpolator::getClassTypeId(), SoVRMLOrientationInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLOrientationInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLPixelTexture::getClassTypeId(), SoVRMLPixelTextureOverride::createInstance);
  overridenClasses.append(SoVRMLPixelTexture::getClassTypeId());
  SoType::overrideType(SoVRMLPlaneSensor::getClassTypeId(), SoVRMLPlaneSensorOverride::createInstance);
  overridenClasses.append(SoVRMLPlaneSensor::getClassTypeId());
  SoType::overrideType(SoVRMLPointLight::getClassTypeId(), SoVRMLPointLightOverride::createInstance);
  overridenClasses.append(SoVRMLPointLight::getClassTypeId());
  SoType::overrideType(SoVRMLPointSet::getClassTypeId(), SoVRMLPointSetOverride::createInstance);
  overridenClasses.append(SoVRMLPointSet::getClassTypeId());
  SoType::overrideType(SoVRMLPositionInterpolator::getClassTypeId(), SoVRMLPositionInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLPositionInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLProximitySensor::getClassTypeId(), SoVRMLProximitySensorOverride::createInstance);
  overridenClasses.append(SoVRMLProximitySensor::getClassTypeId());
  SoType::overrideType(SoVRMLScalarInterpolator::getClassTypeId(), SoVRMLScalarInterpolatorOverride::createInstance);
  overridenClasses.append(SoVRMLScalarInterpolator::getClassTypeId());
  SoType::overrideType(SoVRMLScript::getClassTypeId(), SoVRMLScriptOverride::createInstance);
  overridenClasses.append(SoVRMLScript::getClassTypeId());
  SoType::overrideType(SoVRMLSound::getClassTypeId(), SoVRMLSoundOverride::createInstance);
  overridenClasses.append(SoVRMLSound::getClassTypeId());
  SoType::overrideType(SoVRMLSphere::getClassTypeId(), SoVRMLSphereOverride::createInstance);
  overridenClasses.append(SoVRMLSphere::getClassTypeId());
  SoType::overrideType(SoVRMLSphereSensor::getClassTypeId(), SoVRMLSphereSensorOverride::createInstance);
  overridenClasses.append(SoVRMLSphereSensor::getClassTypeId());
  SoType::overrideType(SoVRMLSpotLight::getClassTypeId(), SoVRMLSpotLightOverride::createInstance);
  overridenClasses.append(SoVRMLSpotLight::getClassTypeId());
  SoType::overrideType(SoVRMLSwitch::getClassTypeId(), SoVRMLSwitchOverride::createInstance);
  overridenClasses.append(SoVRMLSwitch::getClassTypeId());
  SoType::overrideType(SoVRMLText::getClassTypeId(), SoVRMLTextOverride::createInstance);
  overridenClasses.append(SoVRMLText::getClassTypeId());
  SoType::overrideType(SoVRMLTextureCoordinate::getClassTypeId(), SoVRMLTextureCoordinateOverride::createInstance);
  overridenClasses.append(SoVRMLTextureCoordinate::getClassTypeId());
  SoType::overrideType(SoVRMLTextureTransform::getClassTypeId(), SoVRMLTextureTransformOverride::createInstance);
  overridenClasses.append(SoVRMLTextureTransform::getClassTypeId());
  SoType::overrideType(SoVRMLTimeSensor::getClassTypeId(), SoVRMLTimeSensorOverride::createInstance);
  overridenClasses.append(SoVRMLTimeSensor::getClassTypeId());
  SoType::overrideType(SoVRMLTouchSensor::getClassTypeId(), SoVRMLTouchSensorOverride::createInstance);
  overridenClasses.append(SoVRMLTouchSensor::getClassTypeId());
  SoType::overrideType(SoVRMLTransform::getClassTypeId(), SoVRMLTransformOverride::createInstance);
  overridenClasses.append(SoVRMLTransform::getClassTypeId());
  SoType::overrideType(SoVRMLViewpoint::getClassTypeId(), SoVRMLViewpointOverride::createInstance);
  overridenClasses.append(SoVRMLViewpoint::getClassTypeId());
  SoType::overrideType(SoVRMLVisibilitySensor::getClassTypeId(), SoVRMLVisibilitySensorOverride::createInstance);
  overridenClasses.append(SoVRMLVisibilitySensor::getClassTypeId());
  SoType::overrideType(SoVRMLWorldInfo::getClassTypeId(), SoVRMLWorldInfoOverride::createInstance);
  overridenClasses.append(SoVRMLWorldInfo::getClassTypeId());
  SoType::overrideType(SoNodeKitListPart::getClassTypeId(), SoNodeKitListPartOverride::createInstance);
  overridenClasses.append(SoNodeKitListPart::getClassTypeId());
  SoType::overrideType(SoBaseKit::getClassTypeId(), SoBaseKitOverride::createInstance);
  overridenClasses.append(SoBaseKit::getClassTypeId());
  SoType::overrideType(SoAppearanceKit::getClassTypeId(), SoAppearanceKitOverride::createInstance);
  overridenClasses.append(SoAppearanceKit::getClassTypeId());
  SoType::overrideType(SoCameraKit::getClassTypeId(), SoCameraKitOverride::createInstance);
  overridenClasses.append(SoCameraKit::getClassTypeId());
  SoType::overrideType(SoLightKit::getClassTypeId(), SoLightKitOverride::createInstance);
  overridenClasses.append(SoLightKit::getClassTypeId());
  SoType::overrideType(SoSceneKit::getClassTypeId(), SoSceneKitOverride::createInstance);
  overridenClasses.append(SoSceneKit::getClassTypeId());
  SoType::overrideType(SoSeparatorKit::getClassTypeId(), SoSeparatorKitOverride::createInstance);
  overridenClasses.append(SoSeparatorKit::getClassTypeId());
  SoType::overrideType(SoShapeKit::getClassTypeId(), SoShapeKitOverride::createInstance);
  overridenClasses.append(SoShapeKit::getClassTypeId());
  SoType::overrideType(SoWrapperKit::getClassTypeId(), SoWrapperKitOverride::createInstance);
  overridenClasses.append(SoWrapperKit::getClassTypeId());
  SoType::overrideType(SoAntiSquish::getClassTypeId(), SoAntiSquishOverride::createInstance);
  overridenClasses.append(SoAntiSquish::getClassTypeId());
  SoType::overrideType(SoSelection::getClassTypeId(), SoSelectionOverride::createInstance);
  overridenClasses.append(SoSelection::getClassTypeId());
  SoType::overrideType(SoExtSelection::getClassTypeId(), SoExtSelectionOverride::createInstance);
  overridenClasses.append(SoExtSelection::getClassTypeId());
  SoType::overrideType(SoSurroundScale::getClassTypeId(), SoSurroundScaleOverride::createInstance);
  overridenClasses.append(SoSurroundScale::getClassTypeId());
  SoType::overrideType(SoInteractionKit::getClassTypeId(), SoInteractionKitOverride::createInstance);
  overridenClasses.append(SoInteractionKit::getClassTypeId());
  SoType::overrideType(SoDragger::getClassTypeId(), SoDraggerOverride::createInstance);
  overridenClasses.append(SoDragger::getClassTypeId());
  SoType::overrideType(SoCenterballDragger::getClassTypeId(), SoCenterballDraggerOverride::createInstance);
  overridenClasses.append(SoCenterballDragger::getClassTypeId());
  SoType::overrideType(SoDirectionalLightDragger::getClassTypeId(), SoDirectionalLightDraggerOverride::createInstance);
  overridenClasses.append(SoDirectionalLightDragger::getClassTypeId());
  SoType::overrideType(SoDragPointDragger::getClassTypeId(), SoDragPointDraggerOverride::createInstance);
  overridenClasses.append(SoDragPointDragger::getClassTypeId());
  SoType::overrideType(SoHandleBoxDragger::getClassTypeId(), SoHandleBoxDraggerOverride::createInstance);
  overridenClasses.append(SoHandleBoxDragger::getClassTypeId());
  SoType::overrideType(SoJackDragger::getClassTypeId(), SoJackDraggerOverride::createInstance);
  overridenClasses.append(SoJackDragger::getClassTypeId());
  SoType::overrideType(SoPointLightDragger::getClassTypeId(), SoPointLightDraggerOverride::createInstance);
  overridenClasses.append(SoPointLightDragger::getClassTypeId());
  SoType::overrideType(SoRotateCylindricalDragger::getClassTypeId(), SoRotateCylindricalDraggerOverride::createInstance);
  overridenClasses.append(SoRotateCylindricalDragger::getClassTypeId());
  SoType::overrideType(SoRotateDiscDragger::getClassTypeId(), SoRotateDiscDraggerOverride::createInstance);
  overridenClasses.append(SoRotateDiscDragger::getClassTypeId());
  SoType::overrideType(SoRotateSphericalDragger::getClassTypeId(), SoRotateSphericalDraggerOverride::createInstance);
  overridenClasses.append(SoRotateSphericalDragger::getClassTypeId());
  SoType::overrideType(SoScale1Dragger::getClassTypeId(), SoScale1DraggerOverride::createInstance);
  overridenClasses.append(SoScale1Dragger::getClassTypeId());
  SoType::overrideType(SoScale2Dragger::getClassTypeId(), SoScale2DraggerOverride::createInstance);
  overridenClasses.append(SoScale2Dragger::getClassTypeId());
  SoType::overrideType(SoScale2UniformDragger::getClassTypeId(), SoScale2UniformDraggerOverride::createInstance);
  overridenClasses.append(SoScale2UniformDragger::getClassTypeId());
  SoType::overrideType(SoScaleUniformDragger::getClassTypeId(), SoScaleUniformDraggerOverride::createInstance);
  overridenClasses.append(SoScaleUniformDragger::getClassTypeId());
  SoType::overrideType(SoSpotLightDragger::getClassTypeId(), SoSpotLightDraggerOverride::createInstance);
  overridenClasses.append(SoSpotLightDragger::getClassTypeId());
  SoType::overrideType(SoTabBoxDragger::getClassTypeId(), SoTabBoxDraggerOverride::createInstance);
  overridenClasses.append(SoTabBoxDragger::getClassTypeId());
  SoType::overrideType(SoTabPlaneDragger::getClassTypeId(), SoTabPlaneDraggerOverride::createInstance);
  overridenClasses.append(SoTabPlaneDragger::getClassTypeId());
  SoType::overrideType(SoTrackballDragger::getClassTypeId(), SoTrackballDraggerOverride::createInstance);
  overridenClasses.append(SoTrackballDragger::getClassTypeId());
  SoType::overrideType(SoTransformBoxDragger::getClassTypeId(), SoTransformBoxDraggerOverride::createInstance);
  overridenClasses.append(SoTransformBoxDragger::getClassTypeId());
  SoType::overrideType(SoTransformerDragger::getClassTypeId(), SoTransformerDraggerOverride::createInstance);
  overridenClasses.append(SoTransformerDragger::getClassTypeId());
  SoType::overrideType(SoTranslate1Dragger::getClassTypeId(), SoTranslate1DraggerOverride::createInstance);
  overridenClasses.append(SoTranslate1Dragger::getClassTypeId());
  SoType::overrideType(SoTranslate2Dragger::getClassTypeId(), SoTranslate2DraggerOverride::createInstance);
  overridenClasses.append(SoTranslate2Dragger::getClassTypeId());
  SoType::overrideType(SoClipPlaneManip::getClassTypeId(), SoClipPlaneManipOverride::createInstance);
  overridenClasses.append(SoClipPlaneManip::getClassTypeId());
  SoType::overrideType(SoDirectionalLightManip::getClassTypeId(), SoDirectionalLightManipOverride::createInstance);
  overridenClasses.append(SoDirectionalLightManip::getClassTypeId());
  SoType::overrideType(SoPointLightManip::getClassTypeId(), SoPointLightManipOverride::createInstance);
  overridenClasses.append(SoPointLightManip::getClassTypeId());
  SoType::overrideType(SoSpotLightManip::getClassTypeId(), SoSpotLightManipOverride::createInstance);
  overridenClasses.append(SoSpotLightManip::getClassTypeId());
  SoType::overrideType(SoTransformManip::getClassTypeId(), SoTransformManipOverride::createInstance);
  overridenClasses.append(SoTransformManip::getClassTypeId());
  SoType::overrideType(SoCenterballManip::getClassTypeId(), SoCenterballManipOverride::createInstance);
  overridenClasses.append(SoCenterballManip::getClassTypeId());
  SoType::overrideType(SoHandleBoxManip::getClassTypeId(), SoHandleBoxManipOverride::createInstance);
  overridenClasses.append(SoHandleBoxManip::getClassTypeId());
  SoType::overrideType(SoJackManip::getClassTypeId(), SoJackManipOverride::createInstance);
  overridenClasses.append(SoJackManip::getClassTypeId());
  SoType::overrideType(SoTabBoxManip::getClassTypeId(), SoTabBoxManipOverride::createInstance);
  overridenClasses.append(SoTabBoxManip::getClassTypeId());
  SoType::overrideType(SoTrackballManip::getClassTypeId(), SoTrackballManipOverride::createInstance);
  overridenClasses.append(SoTrackballManip::getClassTypeId());
  SoType::overrideType(SoTransformBoxManip::getClassTypeId(), SoTransformBoxManipOverride::createInstance);
  overridenClasses.append(SoTransformBoxManip::getClassTypeId());
  SoType::overrideType(SoTransformerManip::getClassTypeId(), SoTransformerManipOverride::createInstance);
  overridenClasses.append(SoTransformerManip::getClassTypeId());
}


const SoTypeList* getOverridenClasses()
{
  return &overridenClasses;
}
